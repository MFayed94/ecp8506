---
title: "Validation homework week6"
format: 
  html:
    toc: true
    embed-resources: true
---

```{r}
#| echo: false

suppressPackageStartupMessages(library(mrgsolve))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(here))
```

# `mrgsolve` model

## Load your `mrgsolve` model

```{r}
#| echo: true
#| warning: true
# # Please load your model
# mod <- 
```

## `see` model

```{r}
see(mod)
```

# Prepare input

## Load your `NONMEM` input dataset

```{r}
#| echo: true
csv <- read_csv(here("wk6/data/nmdat1.csv"), na = ".")
head(csv, n = 3)
```

## Load `NONMEM` output table contains `PRED`

The `PRED` and `IPRED` column in this table is generated by `NONMEM`. Let's rename it as `NMPRED` and `NMIPRED` to avoid confusion.

```{r}
#| echo: true
tab <- read_table(here("wk6/nm-modelhwwk6/hwwk6.tab"), 
                  skip = 1) %>% rename(NMPRED=PRED, NMIPRED=IPRED)
head(tab, n = 3)
```

## Join `NONMEM` input dataset and output table

The `NUM` column provides a key to join these two

```{r}
#| echo: true
data <- left_join(tab, csv, by = "NUM")
head(data, n = 3)
```

# Validation using `PRED`

## Simulate `PRED` using `mrgsolve`

```{r}
#| echo: true
out <- 
  mod %>% 
  # Remove all random effects, so simulated IPRED=PRED
  zero_re() %>% 
  # Take observation records only
  obsonly() %>% 
  mrgsim(data = data, 
         # Recover `NMPRED` for validation
         recover = "NMPRED",
         # Specify the output format as dataframe (df)
         output = "df", 
         # Limit the number of output digits to 5 (what `NONMEM` is giving).
         digits = 5) %>% 
  rename(MRGPRED=IPRED) # Rename mrgsolve `PRED` as `MRGPRED`

head(out, n = 3)
```

## Graphical check `PRED` by `NONMEM` versus `mrgsolve`

```{r}
#| echo: true
plot(out$NMPRED, out$MRGPRED)
```

## Numerical check `PRED` by `NONMEM` versus `mrgsolve`

```{r}
#| echo: true
summary(100*(out$NMPRED - out$MRGPRED)/out$NMPRED)
```

# Validation using `IPRED`

## Read in an additional table that contain the post-hoc ETA values

Validation using `IPRED` values needs an additional table which has post-hoc ETA values.

```{r}
#| echo: true
etas <- read_table(here("wk6/nm-model", runno, 
                        paste0(runno, "par.tab")), 
                  skip = 1) %>% 
  dplyr::select(matches("NUM|ETA"))
```

Join the additional dataset with post-hoc ETA values with the `data` created earlier. Again, the `NUM` column provides a key to join these two

```{r}
#| echo: true
data <- left_join(data, etas, by = "NUM")
```

## Simulate `IPRED` using `mrgsolve`

```{r}
#| echo: true
out <- mrgsim(
  mod, 
  data, 
  # Specify the source of ETA values coming from data
  etasrc = "data.all",
  # Take observation records only
  obsonly = TRUE, 
  # Recover `NMPRED` for validation
  recover = "NMIPRED, NMPRED", 
  # Specify the output format as dataframe (df)
  output = "df", 
  # Limit the number of output digits to 5 (what `NONMEM` is giving).
  digits = 5
) %>% rename(MRGIPRED=IPRED)
```

## Graphical check `IPRED` by `NONMEM` versus `mrgsolve`

```{r}
#| echo: true
plot(out$NMIPRED, out$MRGIPRED)
```

## Numerical check `PRED` by `NONMEM` versus `mrgsolve`

```{r}
#| echo: true
summary(100*(out$NMIPRED-out$MRGIPRED)/out$NMIPRED)
```
